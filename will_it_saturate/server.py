# AUTOGENERATED! DO NOT EDIT! File to edit: 06_fastapi_uvicorn_server.ipynb (unless otherwise specified).

__all__ = ['FastAPIUvicornServer']

# Cell

import time
import subprocess

from .core import BenchmarkServer


class FastAPIUvicornServer(BenchmarkServer):
    name: str = "fastAPI/uvicorn"

    def get_pid(self):
        kwargs = {"shell": True, "capture_output": True, "text": True}
        output = subprocess.run(f"ps aux | grep will_it_saturate.main:app", **kwargs)
        lines = [l for l in output.stdout.split("\n") if len(l) > 0 and "grep" not in l]
        if len(lines) > 0:
            pid = lines[0].split()[1]
            return pid

    @property
    def started(self):
        return self.get_pid() is not None

    def start_server(self):
        subprocess.Popen(["uvicorn", "--no-access-log", "will_it_saturate.main:app"])
        # subprocess.Popen(["uvicorn", "will_it_saturate.main:app"])

    def stop_server(self):
        subprocess.check_output(["kill", self.get_pid()])
        time.sleep(1)  # dunno why this is necessary

    def start(self):
        if not self.started:
            self.start_server()

    def stop(self):
        if self.started:
            self.stop_server()