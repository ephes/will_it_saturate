# AUTOGENERATED! DO NOT EDIT! File to edit: 27_control_server.ipynb (unless otherwise specified).

__all__ = ['read_root', 'create_epoch', 'create_server', 'list_servers', 'host_details', 'measure', 'app', 'servers']

# Cell

import cpuinfo

from pathlib import Path
from pydantic import BaseModel

from fastapi import FastAPI

from ..epochs import Epoch
from ..hosts import HostDetails

from ..servers import (
    BaseServer,
    FastAPIUvicornServer,
    NginxDockerServer,
    DjangoGunicornWSGIServer,
)

from ..clients import ClientParameters


app = FastAPI()

servers = {}


@app.get("/")
def read_root():
    return {"Hello": "World/Control"}


@app.post("/epochs/")
def create_epoch(epoch: Epoch):
    print(epoch)
    epoch.create_files()
    return epoch


@app.post("/servers/")
def create_server(server: BaseServer):
    print(server)
    global servers
    if server.name not in servers:
        created_server = FastAPIUvicornServer(name=server.name, port=5001)
        created_server.start()
        servers[server.name] = created_server
    return servers[server.name]


@app.get("/servers/")
def list_servers():
    return servers


@app.get("/host-details/")
def host_details() -> HostDetails:
    host_details = HostDetails.build_details_from_localhost()
    return host_details


@app.post("/measure/")
def measure(client_params: ClientParameters, epoch: Epoch):
    benchmark_client = client_params.client()
    print("client: ", benchmark_client)
    print("epoch: ", epoch)
    return benchmark_client.measure(epoch)