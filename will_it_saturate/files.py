# AUTOGENERATED! DO NOT EDIT! File to edit: 02_file.ipynb (unless otherwise specified).

__all__ = ['calculate_checksum', 'checksum_for_path', 'create_via_filesystem', 'BenchmarkFile', 'FILE_CREATORS']

# Cell

import os
import hashlib

from pathlib import Path
from typing import Optional
from pydantic import BaseModel


def calculate_checksum(content):
    return hashlib.md5(content).hexdigest()


def checksum_for_path(path):
    with path.open("rb") as f:
        checksum = calculate_checksum(f.read())
    return checksum


def create_via_filesystem(path, size):
    path.parent.mkdir(parents=True, exist_ok=True)
    if not path.exists():
        with path.open("wb") as f:
            f.write(os.urandom(size))
    return checksum_for_path(path)


FILE_CREATORS = {"filesystem": create_via_filesystem}


class BenchmarkFile(BaseModel):
    number: int
    base_path: str
    size: int
    data_root: str = "data"
    hostname: str = "localhost"
    port: int = 8000
    checksum: Optional[str] = None
    creator_name: str = "filesystem"

    @property
    def filesystem_path(self):
        return Path(self.data_root) / self.base_path / str(self.number)

    def get_or_create(self):
        create = FILE_CREATORS.get(self.creator_name)
        self.checksum = create(self.filesystem_path, self.size)

    @property
    def path(self):
        return f"{self.data_root}/{self.base_path}/{self.number}"

    @property
    def host(self):
        return f"http://{self.hostname}:{self.port}"

    @property
    def url(self):
        return f"{self.host}/{self.path}"