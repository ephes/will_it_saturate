# AUTOGENERATED! DO NOT EDIT! File to edit: 01_host.ipynb (unless otherwise specified).

__all__ = ['Host', 'get_macos_machine_id', 'get_linux_machine_id', 'get_machine_id', 'HostDetails']

# Cell

import cpuinfo
import platform
import subprocess

from pathlib import Path
from functools import cache

from pydantic import BaseModel


class Host(BaseModel):
    name: str
    port: int


def get_macos_machine_id():
    kwargs = {"capture_output": True, "text": True}
    output = subprocess.run(
        [
            "/usr/sbin/system_profiler",
            "SPHardwareDataType",
        ],
        **kwargs,
    )
    machine_id = None
    for line in output.stdout.split("\n"):
        if "Serial Number" in line:
            machine_id = line.split()[-1]
    return machine_id


def get_linux_machine_id():
    machine_id = "linux_dummy"
    with Path("/etc/machine-id").open() as f:
        machine_id = f.read().rstrip()
    return machine_id


@cache
def get_machine_id():
    os = platform.platform().lower().split("-")[0]
    os_lookup = {"macos": get_macos_machine_id, "linux": get_linux_machine_id}
    return os_lookup[os]()

# Cell


class HostDetails(BaseModel):
    machine_id: str
    cpu_info: dict

    @classmethod
    def build_details_from_localhost(cls):
        kwargs = {
            "machine_id": get_machine_id(),
            "cpu_info": cpuinfo.get_cpu_info(),
        }
        return cls(**kwargs)